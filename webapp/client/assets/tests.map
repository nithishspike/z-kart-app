{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","online-shopping-client/tests/app.lint-test.js","online-shopping-client/tests/helpers/destroy-app.js","online-shopping-client/tests/helpers/module-for-acceptance.js","online-shopping-client/tests/helpers/resolver.js","online-shopping-client/tests/helpers/start-app.js","online-shopping-client/tests/integration/components/cart-container-test.js","online-shopping-client/tests/integration/components/horizontal-scroll-items-test.js","online-shopping-client/tests/integration/components/input-field-test.js","online-shopping-client/tests/integration/components/input-password-test.js","online-shopping-client/tests/integration/components/login-page-test.js","online-shopping-client/tests/integration/components/model-dialog-test.js","online-shopping-client/tests/integration/components/my-tour.js-test.js","online-shopping-client/tests/integration/components/product-container-test.js","online-shopping-client/tests/integration/components/search-box-test.js","online-shopping-client/tests/integration/components/shop-navbar-test.js","online-shopping-client/tests/integration/components/toast-notification-test.js","online-shopping-client/tests/integration/components/top-menu-test.js","online-shopping-client/tests/integration/components/user-details-test.js","online-shopping-client/tests/integration/helpers/calculate-discount-price-test.js","online-shopping-client/tests/integration/helpers/eq-test.js","online-shopping-client/tests/integration/helpers/is-logged-in-test.js","online-shopping-client/tests/integration/helpers/join-string-test.js","online-shopping-client/tests/integration/helpers/or-test.js","online-shopping-client/tests/integration/helpers/product-url-test.js","online-shopping-client/tests/integration/helpers/range-test.js","online-shopping-client/tests/integration/helpers/split-lines-test.js","online-shopping-client/tests/integration/helpers/time-converter-test.js","online-shopping-client/tests/test-helper.js","online-shopping-client/tests/tests.lint-test.js","online-shopping-client/tests/unit/controllers/account-test.js","online-shopping-client/tests/unit/controllers/account/orders-test.js","online-shopping-client/tests/unit/controllers/account/profile-test.js","online-shopping-client/tests/unit/controllers/account/profile/update-password-test.js","online-shopping-client/tests/unit/controllers/account/users-test.js","online-shopping-client/tests/unit/controllers/application-test.js","online-shopping-client/tests/unit/controllers/checkout-test.js","online-shopping-client/tests/unit/controllers/index-test.js","online-shopping-client/tests/unit/controllers/login-test.js","online-shopping-client/tests/unit/controllers/product-test.js","online-shopping-client/tests/unit/controllers/products-test.js","online-shopping-client/tests/unit/controllers/signup-test.js","online-shopping-client/tests/unit/routes/account-test.js","online-shopping-client/tests/unit/routes/account/orders-test.js","online-shopping-client/tests/unit/routes/account/profile-test.js","online-shopping-client/tests/unit/routes/account/profile/update-password-test.js","online-shopping-client/tests/unit/routes/account/users-test.js","online-shopping-client/tests/unit/routes/application-test.js","online-shopping-client/tests/unit/routes/checkout-test.js","online-shopping-client/tests/unit/routes/checkout/order-confirmation-test.js","online-shopping-client/tests/unit/routes/index-test.js","online-shopping-client/tests/unit/routes/index/login1-test.js","online-shopping-client/tests/unit/routes/login-test.js","online-shopping-client/tests/unit/routes/product-test.js","online-shopping-client/tests/unit/routes/products/login-test.js","online-shopping-client/tests/unit/routes/signup-test.js","online-shopping-client/tests/unit/services/auth-test.js","online-shopping-client/tests/unit/services/data-store-test.js","online-shopping-client/tests/unit/services/toast-test.js","online-shopping-client/tests/unit/utils/ajax-req-test.js","online-shopping-client/tests/unit/utils/encrypt-data-test.js","online-shopping-client/tests/unit/utils/google-image-search-test.js","online-shopping-client/tests/unit/utils/password-validation-test.js","online-shopping-client/tests/unit/utils/transform-data-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('online-shopping-client/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/cart-container.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/cart-container.js should pass ESLint\\n\\n41:5 - Unexpected console statement. (no-console)\\n49:7 - Unexpected console statement. (no-console)\\n52:7 - Unexpected console statement. (no-console)\\n86:11 - Unexpected console statement. (no-console)\\n88:11 - Unexpected console statement. (no-console)\\n109:9 - Unexpected console statement. (no-console)\\n113:9 - Unexpected console statement. (no-console)\\n148:7 - Unexpected console statement. (no-console)\\n162:11 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('components/horizontal-scroll-items.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/horizontal-scroll-items.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/input-field.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-field.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/input-password.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-password.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/login-page.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/login-page.js should pass ESLint\\n\\n7:13 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('components/model-dialog.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/model-dialog.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/my-tour.js.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/my-tour.js.js should pass ESLint\\n\\n3:10 - \\'run\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('components/product-container.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/product-container.js should pass ESLint\\n\\n15:7 - Unexpected console statement. (no-console)\\n19:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('components/search-box.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-box.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/shop-navbar.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/shop-navbar.js should pass ESLint\\n\\n30:15 - \\'error\\' is defined but never used. (no-unused-vars)\\n60:7 - Unexpected console statement. (no-console)\\n64:7 - Unexpected console statement. (no-console)\\n79:5 - Unexpected console statement. (no-console)\\n111:17 - \\'error\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('components/toast-notification.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/toast-notification.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/top-menu.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/top-menu.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/user-details.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/user-details.js should pass ESLint\\n\\n18:3 - Duplicate key \\'toast\\'. (no-dupe-keys)\\n20:5 - Unexpected console statement. (no-console)\\n39:5 - Unexpected console statement. (no-console)\\n79:10 - Unexpected console statement. (no-console)\\n82:10 - Unexpected console statement. (no-console)\\n114:5 - Unexpected console statement. (no-console)\\n125:14 - \\'response\\' is defined but never used. (no-unused-vars)\\n156:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/account.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/account.js should pass ESLint\\n\\n20:9 - Unexpected console statement. (no-console)\\n23:13 - Unexpected console statement. (no-console)\\n26:11 - Unexpected console statement. (no-console)\\n37:17 - Unexpected console statement. (no-console)\\n39:17 - \\'error\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('controllers/account/orders.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/account/orders.js should pass ESLint\\n\\n24:13 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/account/profile.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/account/profile.js should pass ESLint\\n\\n23:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/account/profile/update-password.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/account/profile/update-password.js should pass ESLint\\n\\n18:13 - Unexpected console statement. (no-console)\\n32:15 - Unexpected console statement. (no-console)\\n73:15 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/account/users.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/account/users.js should pass ESLint\\n\\n11:13 - Unexpected console statement. (no-console)\\n17:17 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/application.js should pass ESLint\\n\\n7:15 - \\'intro\\' is assigned a value but never used. (no-unused-vars)\\n44:9 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/checkout.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/checkout.js should pass ESLint\\n\\n9:7 - Unexpected console statement. (no-console)\\n18:9 - Unexpected console statement. (no-console)\\n24:13 - Unexpected console statement. (no-console)\\n25:13 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/login.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/login.js should pass ESLint\\n\\n2:8 - \\'$\\' is defined but never used. (no-unused-vars)\\n28:7 - Unexpected console statement. (no-console)\\n58:9 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/product.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/product.js should pass ESLint\\n\\n2:8 - \\'$\\' is defined but never used. (no-unused-vars)\\n14:13 - Unexpected console statement. (no-console)\\n18:9 - Unexpected console statement. (no-console)\\n32:9 - Unexpected console statement. (no-console)\\n39:13 - Unexpected console statement. (no-console)\\n44:17 - Unexpected console statement. (no-console)\\n53:24 - \\'res\\' is defined but never used. (no-unused-vars)\\n60:17 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/products.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/products.js should pass ESLint\\n\\n29:9 - Unexpected console statement. (no-console)\\n67:17 - Unexpected console statement. (no-console)\\n71:13 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/signup.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/signup.js should pass ESLint\\n\\n4:8 - \\'$\\' is defined but never used. (no-unused-vars)\\n5:8 - \\'ENV\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('helpers/calculate-discount-price.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'helpers/calculate-discount-price.js should pass ESLint\\n\\n4:3 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('helpers/eq.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/eq.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/is-logged-in.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'helpers/is-logged-in.js should pass ESLint\\n\\n8:5 - Unexpected console statement. (no-console)\\n22:7 - Unexpected console statement. (no-console)\\n25:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('helpers/join-string.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/join-string.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/or.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/or.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/product-url.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/product-url.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/range.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/range.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/split-lines.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'helpers/split-lines.js should pass ESLint\\n\\n4:3 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('helpers/time-converter.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/time-converter.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/account.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/account.js should pass ESLint\\n\\n9:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/account/orders.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/account/orders.js should pass ESLint\\n\\n16:17 - Unexpected console statement. (no-console)\\n21:17 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/account/profile.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/account/profile.js should pass ESLint\\n\\n9:7 - Unexpected console statement. (no-console)\\n18:9 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/account/profile/update-password.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/account/profile/update-password.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/account/users.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/account/users.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/checkout.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/checkout.js should pass ESLint\\n\\n19:13 - Unexpected console statement. (no-console)\\n20:13 - Unexpected console statement. (no-console)\\n21:13 - Unexpected console statement. (no-console)\\n37:17 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/checkout/order-confirmation.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/checkout/order-confirmation.js should pass ESLint\\n\\n14:25 - \\'transition\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/index.js should pass ESLint\\n\\n2:8 - \\'$\\' is defined but never used. (no-unused-vars)\\n14:9 - Unexpected console statement. (no-console)\\n17:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/login.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/login.js should pass ESLint\\n\\n16:5 - Unexpected console statement. (no-console)\\n17:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/product.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/product.js should pass ESLint\\n\\n2:8 - \\'$\\' is defined but never used. (no-unused-vars)\\n13:9 - Unexpected console statement. (no-console)\\n49:15 - Unexpected console statement. (no-console)\\n56:13 - Unexpected console statement. (no-console)\\n60:23 - \\'transition\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('routes/products.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/products.js should pass ESLint\\n\\n33:9 - Unexpected console statement. (no-console)\\n36:9 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/signup.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/signup.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('services/data-store.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/data-store.js should pass ESLint\\n\\n2:8 - \\'$\\' is defined but never used. (no-unused-vars)\\n16:5 - Unexpected console statement. (no-console)\\n20:5 - Unexpected console statement. (no-console)\\n24:5 - Unexpected console statement. (no-console)\\n31:5 - Unexpected console statement. (no-console)\\n55:9 - Unexpected console statement. (no-console)\\n61:9 - Unexpected console statement. (no-console)\\n68:9 - Unexpected console statement. (no-console)\\n75:9 - Unexpected console statement. (no-console)\\n80:9 - Unexpected console statement. (no-console)\\n87:9 - Unexpected console statement. (no-console)\\n89:7 - Unexpected console statement. (no-console)\\n92:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('services/toast.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/toast.js should pass ESLint\\n\\n16:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('utils/ajax-req.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/ajax-req.js should pass ESLint\\n\\n3:8 - \\'ENV\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('utils/encrypt-data.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/encrypt-data.js should pass ESLint\\n\\n3:21 - \\'JSEncrypt\\' is not defined. (no-undef)\\n8:7 - Unexpected console statement. (no-console)\\n10:3 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('utils/password-validation.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/password-validation.js should pass ESLint\\n\\n2:3 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('utils/transform-data.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/transform-data.js should pass ESLint\\n\\n2:5 - Unexpected console statement. (no-console)\\n5:46 - \\'discountId\\' is assigned a value but never used. (no-unused-vars)');\n  });\n});","define('online-shopping-client/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define('online-shopping-client/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'online-shopping-client/tests/helpers/start-app', 'online-shopping-client/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var resolve = Ember.RSVP.resolve;\n});","define('online-shopping-client/tests/helpers/resolver', ['exports', 'online-shopping-client/resolver', 'online-shopping-client/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('online-shopping-client/tests/helpers/start-app', ['exports', 'online-shopping-client/app', 'online-shopping-client/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = Ember.merge({}, _environment.default.APP);\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('online-shopping-client/tests/integration/components/cart-container-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('cart-container', 'Integration | Component | cart container', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"KI+t+ne+\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"cart-container\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"6YrYBa3F\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"cart-container\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/horizontal-scroll-items-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('horizontal-scroll-items', 'Integration | Component | horizontal scroll items', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"iVht29HN\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"horizontal-scroll-items\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"kjPw7gBA\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"horizontal-scroll-items\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/input-field-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('input-field', 'Integration | Component | input field', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"2Bvrnl1M\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"input-field\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"6Kv7WcDo\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"input-field\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/input-password-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('input-password', 'Integration | Component | input password', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"aDDiZzrm\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"input-password\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"M4iBn64Q\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"input-password\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/login-page-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('login-page', 'Integration | Component | login page', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"MN6uxQbC\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"login-page\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"1c/loGdJ\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"login-page\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/model-dialog-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('model-dialog', 'Integration | Component | model dialog', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"vAO7dyLi\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"model-dialog\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"3l3ZOUlL\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"model-dialog\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/my-tour.js-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('my-tour.js', 'Integration | Component | my tour.js', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"hdE/QJRQ\",\n      \"block\": \"{\\\"statements\\\":[[1,[28,[\\\"my-tour\\\",\\\"js\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"SObE27Gg\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"component\\\"],[[28,[\\\"my-tour\\\",\\\"js\\\"]]],null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/product-container-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('product-container', 'Integration | Component | product container', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"ABMP1t1q\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"product-container\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"f+w0rCC5\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"product-container\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/search-box-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('search-box', 'Integration | Component | search box', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"AEqHaaGW\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"search-box\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"LeHjmhXB\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"search-box\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/shop-navbar-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('shop-navbar', 'Integration | Component | shop navbar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"fSLNlXUF\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"shop-navbar\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"g0+0jwSJ\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"shop-navbar\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/toast-notification-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('toast-notification', 'Integration | Component | toast notification', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"SvHltb9u\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"toast-notification\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"GUtYzDEo\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"toast-notification\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/top-menu-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('top-menu', 'Integration | Component | top menu', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"LinOaNIt\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"top-menu\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"RBny+x3F\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"top-menu\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/components/user-details-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('user-details', 'Integration | Component | user details', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"ylTQOBU8\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"user-details\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"m4RMUlTW\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"user-details\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('online-shopping-client/tests/integration/helpers/calculate-discount-price-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('calculate-discount-price', 'helper:calculate-discount-price', {\n    integration: true\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.set('inputValue', '1234');\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"co36PbAh\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"calculate-discount-price\\\"],[[28,[\\\"inputValue\\\"]]],null],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '1234');\n  });\n});","define('online-shopping-client/tests/integration/helpers/eq-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('eq', 'helper:eq', {\n    integration: true\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.set('inputValue', '1234');\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"1SYOrDlN\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"eq\\\"],[[28,[\\\"inputValue\\\"]]],null],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '1234');\n  });\n});","define('online-shopping-client/tests/integration/helpers/is-logged-in-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('is-logged-in', 'helper:is-logged-in', {\n    integration: true\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.set('inputValue', '1234');\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"T6IZ74kp\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"is-logged-in\\\"],[[28,[\\\"inputValue\\\"]]],null],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '1234');\n  });\n});","define('online-shopping-client/tests/integration/helpers/join-string-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('join-string', 'helper:join-string', {\n    integration: true\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.set('inputValue', '1234');\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"djsOzsPH\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"join-string\\\"],[[28,[\\\"inputValue\\\"]]],null],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '1234');\n  });\n});","define('online-shopping-client/tests/integration/helpers/or-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('or', 'helper:or', {\n    integration: true\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.set('inputValue', '1234');\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"l5tNo+6p\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"or\\\"],[[28,[\\\"inputValue\\\"]]],null],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '1234');\n  });\n});","define('online-shopping-client/tests/integration/helpers/product-url-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('product-url', 'helper:product-url', {\n    integration: true\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.set('inputValue', '1234');\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Hr9kznpr\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"product-url\\\"],[[28,[\\\"inputValue\\\"]]],null],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '1234');\n  });\n});","define('online-shopping-client/tests/integration/helpers/range-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('range', 'helper:range', {\n    integration: true\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.set('inputValue', '1234');\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"UJ7HN/VG\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"range\\\"],[[28,[\\\"inputValue\\\"]]],null],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '1234');\n  });\n});","define('online-shopping-client/tests/integration/helpers/split-lines-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('split-lines', 'helper:split-lines', {\n    integration: true\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.set('inputValue', '1234');\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"dKILL0X3\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"split-lines\\\"],[[28,[\\\"inputValue\\\"]]],null],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '1234');\n  });\n});","define('online-shopping-client/tests/integration/helpers/time-converter-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('time-converter', 'helper:time-converter', {\n    integration: true\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.set('inputValue', '1234');\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"fepCjN8T\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"time-converter\\\"],[[28,[\\\"inputValue\\\"]]],null],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '1234');\n  });\n});","define('online-shopping-client/tests/test-helper', ['online-shopping-client/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('online-shopping-client/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/cart-container-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/cart-container-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/horizontal-scroll-items-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/horizontal-scroll-items-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/input-field-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-field-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/input-password-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-password-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/login-page-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/login-page-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/model-dialog-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/model-dialog-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/my-tour.js-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/my-tour.js-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/product-container-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/product-container-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/search-box-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-box-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/shop-navbar-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/shop-navbar-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/toast-notification-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/toast-notification-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/top-menu-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/top-menu-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/user-details-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/user-details-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/helpers/calculate-discount-price-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/calculate-discount-price-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/helpers/eq-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/eq-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/helpers/is-logged-in-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/is-logged-in-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/helpers/join-string-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/join-string-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/helpers/or-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/or-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/helpers/product-url-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/product-url-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/helpers/range-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/range-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/helpers/split-lines-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/split-lines-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/helpers/time-converter-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/time-converter-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/account-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/account-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/account/orders-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/account/orders-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/account/profile-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/account/profile-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/account/profile/update-password-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/account/profile/update-password-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/account/users-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/account/users-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/checkout-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/checkout-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/index-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/login-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/login-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/product-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/product-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/products-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/products-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/signup-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/signup-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/account-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/account-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/account/orders-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/account/orders-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/account/profile-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/account/profile-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/account/profile/update-password-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/account/profile/update-password-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/account/users-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/account/users-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/checkout-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/checkout-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/checkout/order-confirmation-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/checkout/order-confirmation-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/index/login1-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index/login1-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/login-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/login-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/product-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/product-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/products/login-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/products/login-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/signup-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/signup-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/auth-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/auth-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/data-store-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/data-store-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/toast-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/toast-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/ajax-req-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/ajax-req-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/encrypt-data-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/encrypt-data-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/google-image-search-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/google-image-search-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/password-validation-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/password-validation-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/transform-data-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/transform-data-test.js should pass ESLint\\n\\n');\n  });\n});","define('online-shopping-client/tests/unit/controllers/account-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:account', 'Unit | Controller | account', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/account/orders-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:account/orders', 'Unit | Controller | account/orders', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/account/profile-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:account/profile', 'Unit | Controller | account/profile', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/account/profile/update-password-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:account/profile/update-password', 'Unit | Controller | account/profile/update password', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/account/users-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:account/users', 'Unit | Controller | account/users', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/application-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:application', 'Unit | Controller | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/checkout-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:checkout', 'Unit | Controller | checkout', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/index-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:index', 'Unit | Controller | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/login-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:login', 'Unit | Controller | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/product-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:product', 'Unit | Controller | product', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/products-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:products', 'Unit | Controller | products', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/controllers/signup-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:signup', 'Unit | Controller | signup', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('online-shopping-client/tests/unit/routes/account-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:account', 'Unit | Route | account', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/account/orders-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:account/orders', 'Unit | Route | account/orders', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/account/profile-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:account/profile', 'Unit | Route | account/profile', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/account/profile/update-password-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:account/profile/update-password', 'Unit | Route | account/profile/update password', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/account/users-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:account/users', 'Unit | Route | account/users', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/application-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/checkout-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:checkout', 'Unit | Route | checkout', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/checkout/order-confirmation-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:checkout/order-confirmation', 'Unit | Route | checkout/order confirmation', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/index-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/index/login1-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:index/login1', 'Unit | Route | index/login1', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/login-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:login', 'Unit | Route | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/product-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:product', 'Unit | Route | product', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/products/login-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:products/login', 'Unit | Route | products/login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/routes/signup-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:signup', 'Unit | Route | signup', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('online-shopping-client/tests/unit/services/auth-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:auth', 'Unit | Service | auth', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('online-shopping-client/tests/unit/services/data-store-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:data-store', 'Unit | Service | data store', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('online-shopping-client/tests/unit/services/toast-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:toast', 'Unit | Service | toast', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('online-shopping-client/tests/unit/utils/ajax-req-test', ['online-shopping-client/utils/ajax-req', 'qunit'], function (_ajaxReq, _qunit) {\n  'use strict';\n\n  (0, _qunit.module)('Unit | Utility | ajax req');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _ajaxReq.default)();\n    assert.ok(result);\n  });\n});","define('online-shopping-client/tests/unit/utils/encrypt-data-test', ['online-shopping-client/utils/encrypt-data', 'qunit'], function (_encryptData, _qunit) {\n  'use strict';\n\n  (0, _qunit.module)('Unit | Utility | encrypt data');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _encryptData.default)();\n    assert.ok(result);\n  });\n});","define('online-shopping-client/tests/unit/utils/google-image-search-test', ['online-shopping-client/utils/google-image-search', 'qunit'], function (_googleImageSearch, _qunit) {\n  'use strict';\n\n  (0, _qunit.module)('Unit | Utility | google image search');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _googleImageSearch.default)();\n    assert.ok(result);\n  });\n});","define('online-shopping-client/tests/unit/utils/password-validation-test', ['online-shopping-client/utils/password-validation', 'qunit'], function (_passwordValidation, _qunit) {\n  'use strict';\n\n  (0, _qunit.module)('Unit | Utility | password validation');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _passwordValidation.default)();\n    assert.ok(result);\n  });\n});","define('online-shopping-client/tests/unit/utils/transform-data-test', ['online-shopping-client/utils/transform-data', 'qunit'], function (_transformData, _qunit) {\n  'use strict';\n\n  (0, _qunit.module)('Unit | Utility | transform data');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _transformData.default)();\n    assert.ok(result);\n  });\n});","require('online-shopping-client/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappingsfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClpfile":"tests.js"}